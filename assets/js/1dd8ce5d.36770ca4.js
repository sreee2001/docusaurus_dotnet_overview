"use strict";(self.webpackChunkdotnet_overview=self.webpackChunkdotnet_overview||[]).push([[1923],{8453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>a});var t=n(6540);const o={},s=t.createContext(o);function i(e){const r=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(s.Provider,{value:r},e.children)}},9151:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"Topics/WebTechnologies/RazorPages","title":"Razor Pages","description":"Short Introduction","source":"@site/docs/Topics/03_WebTechnologies/15_RazorPages.md","sourceDirName":"Topics/03_WebTechnologies","slug":"/Topics/WebTechnologies/razor_pages","permalink":"/docusaurus_dotnet_overview/docs/Topics/WebTechnologies/razor_pages","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"dotnet","permalink":"/docusaurus_dotnet_overview/docs/tags/dotnet"},{"inline":true,"label":"core","permalink":"/docusaurus_dotnet_overview/docs/tags/core"},{"inline":true,"label":"razor","permalink":"/docusaurus_dotnet_overview/docs/tags/razor"},{"inline":true,"label":"pages","permalink":"/docusaurus_dotnet_overview/docs/tags/pages"},{"inline":true,"label":"architecture","permalink":"/docusaurus_dotnet_overview/docs/tags/architecture"},{"inline":true,"label":"web","permalink":"/docusaurus_dotnet_overview/docs/tags/web"}],"version":"current","sidebarPosition":15,"frontMatter":{"slug":"razor_pages","title":"Razor Pages","tags":["dotnet","core","razor","pages","architecture","web"]},"sidebar":"tutorialSidebar","previous":{"title":"Web API\'s","permalink":"/docusaurus_dotnet_overview/docs/Topics/WebTechnologies/web_api"},"next":{"title":"Blazor","permalink":"/docusaurus_dotnet_overview/docs/Topics/WebTechnologies/blazor_pages"}}');var o=n(4848),s=n(8453);const i={slug:"razor_pages",title:"Razor Pages",tags:["dotnet","core","razor","pages","architecture","web"]},a="Razor Pages",c={},d=[{value:"Short Introduction",id:"short-introduction",level:2},{value:"Official Definition",id:"official-definition",level:2},{value:"Usage",id:"usage",level:2},{value:"Razor Page View",id:"razor-page-view",level:2},{value:"Use Cases",id:"use-cases",level:2},{value:"When to Use / When Not to Use",id:"when-to-use--when-not-to-use",level:2},{value:"Use Razor Pages when:",id:"use-razor-pages-when",level:3},{value:"Use MVC when:",id:"use-mvc-when",level:3}];function l(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"razor-pages",children:"Razor Pages"})}),"\n",(0,o.jsx)(r.h2,{id:"short-introduction",children:"Short Introduction"}),"\n",(0,o.jsx)(r.p,{children:"Razor Pages is a page-focused framework that makes coding page-focused scenarios easier and more productive than using controllers and views."}),"\n",(0,o.jsx)(r.h2,{id:"official-definition",children:"Official Definition"}),"\n",(0,o.jsx)(r.p,{children:"Razor Pages is a page-based programming model that makes building web UI easier and more productive. It's built on top of ASP.NET Core MVC but provides a simpler, more focused approach to page-based scenarios."}),"\n",(0,o.jsx)(r.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-csharp",children:'// Pages/Products/Index.cshtml.cs\r\npublic class IndexModel : PageModel\r\n{\r\n    private readonly IProductService _productService;\r\n\r\n    public IndexModel(IProductService productService)\r\n    {\r\n        _productService = productService;\r\n    }\r\n\r\n    public IList<Product> Products { get; set; } = new List<Product>();\r\n\r\n    public async Task OnGetAsync()\r\n    {\r\n        Products = (await _productService.GetAllProductsAsync()).ToList();\r\n    }\r\n}\r\n\r\n// Pages/Products/Create.cshtml.cs\r\npublic class CreateModel : PageModel\r\n{\r\n    private readonly IProductService _productService;\r\n\r\n    public CreateModel(IProductService productService)\r\n    {\r\n        _productService = productService;\r\n    }\r\n\r\n    [BindProperty]\r\n    public CreateProductDto Product { get; set; } = new();\r\n\r\n    public IActionResult OnGet()\r\n    {\r\n        return Page();\r\n    }\r\n\r\n    public async Task<IActionResult> OnPostAsync()\r\n    {\r\n        if (!ModelState.IsValid)\r\n        {\r\n            return Page();\r\n        }\r\n\r\n        await _productService.CreateProductAsync(Product);\r\n        return RedirectToPage("./Index");\r\n    }\r\n}\n'})}),"\n",(0,o.jsx)(r.h2,{id:"razor-page-view",children:"Razor Page View"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-html",children:'@page @model IndexModel @{ ViewData["Title"] = "Products"; }\r\n\r\n<h1>Products</h1>\r\n\r\n<p>\r\n  <a asp-page="Create">Create New</a>\r\n</p>\r\n\r\n<table class="table">\r\n  <thead>\r\n    <tr>\r\n      <th>Name</th>\r\n      <th>Price</th>\r\n      <th>Category</th>\r\n      <th>Actions</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    @foreach (var item in Model.Products) {\r\n    <tr>\r\n      <td>@item.Name</td>\r\n      <td>@item.Price.ToString("C")</td>\r\n      <td>@item.Category?.Name</td>\r\n      <td>\r\n        <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |\r\n        <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |\r\n        <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>\r\n      </td>\r\n    </tr>\r\n    }\r\n  </tbody>\r\n</table>\n'})}),"\n",(0,o.jsx)(r.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsx)(r.li,{children:"Simple web applications"}),"\n",(0,o.jsx)(r.li,{children:"Admin panels"}),"\n",(0,o.jsx)(r.li,{children:"Content management systems"}),"\n",(0,o.jsx)(r.li,{children:"Form-heavy applications"}),"\n",(0,o.jsx)(r.li,{children:"Rapid prototyping"}),"\n"]}),"\n",(0,o.jsx)(r.h2,{id:"when-to-use--when-not-to-use",children:"When to Use / When Not to Use"}),"\n",(0,o.jsx)(r.h3,{id:"use-razor-pages-when",children:"Use Razor Pages when:"}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsx)(r.li,{children:"Building page-focused applications"}),"\n",(0,o.jsx)(r.li,{children:"Simple CRUD operations"}),"\n",(0,o.jsx)(r.li,{children:"Prototyping"}),"\n",(0,o.jsx)(r.li,{children:"Team prefers page-based model"}),"\n"]}),"\n",(0,o.jsx)(r.h3,{id:"use-mvc-when",children:"Use MVC when:"}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsx)(r.li,{children:"Complex routing requirements"}),"\n",(0,o.jsx)(r.li,{children:"Heavy use of filters"}),"\n",(0,o.jsx)(r.li,{children:"Complex view logic"}),"\n",(0,o.jsx)(r.li,{children:"RESTful APIs"}),"\n"]})]})}function u(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);