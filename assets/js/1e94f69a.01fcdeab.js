"use strict";(self.webpackChunkdotnet_overview=self.webpackChunkdotnet_overview||[]).push([[3936],{2670:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>c,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"Topics/CoreDevelopment/DependencyInjection","title":"Dependency Injection (DI)","description":"Short Introduction","source":"@site/docs/Topics/02_CoreDevelopment/08_DependencyInjection.md","sourceDirName":"Topics/02_CoreDevelopment","slug":"/Topics/CoreDevelopment/dependency_injection","permalink":"/docusaurus_dotnet_overview/docs/Topics/CoreDevelopment/dependency_injection","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"dotnet","permalink":"/docusaurus_dotnet_overview/docs/tags/dotnet"},{"inline":true,"label":"core","permalink":"/docusaurus_dotnet_overview/docs/tags/core"},{"inline":true,"label":"dependency injection","permalink":"/docusaurus_dotnet_overview/docs/tags/dependency-injection"},{"inline":true,"label":"DI","permalink":"/docusaurus_dotnet_overview/docs/tags/di"},{"inline":true,"label":"IOC","permalink":"/docusaurus_dotnet_overview/docs/tags/ioc"}],"version":"current","sidebarPosition":8,"frontMatter":{"slug":"dependency_injection","title":"Dependency Injection (DI)","tags":["dotnet","core","dependency injection","DI","IOC"]},"sidebar":"tutorialSidebar","previous":{"title":"Entity Framework Core","permalink":"/docusaurus_dotnet_overview/docs/Topics/CoreDevelopment/entity_framework_core"},"next":{"title":"Configuration Management","permalink":"/docusaurus_dotnet_overview/docs/Topics/CoreDevelopment/configuration_management"}}');var o=r(4848),t=r(8453);const c={slug:"dependency_injection",title:"Dependency Injection (DI)",tags:["dotnet","core","dependency injection","DI","IOC"]},s="Dependency Injection",d={},l=[{value:"Short Introduction",id:"short-introduction",level:2},{value:"Official Definition",id:"official-definition",level:2},{value:"Usage",id:"usage",level:2},{value:"Service Lifetimes",id:"service-lifetimes",level:2},{value:"Use Cases",id:"use-cases",level:2},{value:"Sample Usage",id:"sample-usage",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"dependency-injection",children:"Dependency Injection"})}),"\n",(0,o.jsx)(n.h2,{id:"short-introduction",children:"Short Introduction"}),"\n",(0,o.jsx)(n.p,{children:"Dependency Injection is a design pattern that implements Inversion of Control for resolving dependencies, making applications more modular and testable."}),"\n",(0,o.jsx)(n.h2,{id:"official-definition",children:"Official Definition"}),"\n",(0,o.jsx)(n.p,{children:"Dependency Injection (DI) is a technique for achieving Inversion of Control (IoC) between classes and their dependencies, where dependencies are provided to a class rather than created by the class itself."}),"\n",(0,o.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",children:'// Service interface\r\npublic interface IEmailService\r\n{\r\n    Task SendEmailAsync(string to, string subject, string body);\r\n}\r\n\r\n// Service implementation\r\npublic class EmailService : IEmailService\r\n{\r\n    private readonly ILogger<EmailService> _logger;\r\n    private readonly IConfiguration _configuration;\r\n\r\n    public EmailService(ILogger<EmailService> logger, IConfiguration configuration)\r\n    {\r\n        _logger = logger;\r\n        _configuration = configuration;\r\n    }\r\n\r\n    public async Task SendEmailAsync(string to, string subject, string body)\r\n    {\r\n        _logger.LogInformation("Sending email to {EmailAddress}", to);\r\n        // Email sending logic\r\n        await Task.CompletedTask;\r\n    }\r\n}\r\n\r\n// Service registration\r\nbuilder.Services.AddScoped<IEmailService, EmailService>();\r\nbuilder.Services.AddSingleton<IMemoryCache, MemoryCache>();\r\nbuilder.Services.AddTransient<IProductService, ProductService>();\n'})}),"\n",(0,o.jsx)(n.h2,{id:"service-lifetimes",children:"Service Lifetimes"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Singleton"}),": Created once and shared"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Scoped"}),": Created once per request"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Transient"}),": Created every time requested"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Loose coupling between components"}),"\n",(0,o.jsx)(n.li,{children:"Unit testing with mock dependencies"}),"\n",(0,o.jsx)(n.li,{children:"Configuration injection"}),"\n",(0,o.jsx)(n.li,{children:"Cross-cutting concerns"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"sample-usage",children:"Sample Usage"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",children:'// Controller with DI\r\n[ApiController]\r\n[Route("api/[controller]")]\r\npublic class OrdersController : ControllerBase\r\n{\r\n    private readonly IOrderService _orderService;\r\n    private readonly IEmailService _emailService;\r\n    private readonly ILogger<OrdersController> _logger;\r\n\r\n    public OrdersController(\r\n        IOrderService orderService,\r\n        IEmailService emailService,\r\n        ILogger<OrdersController> logger)\r\n    {\r\n        _orderService = orderService;\r\n        _emailService = emailService;\r\n        _logger = logger;\r\n    }\r\n\r\n    [HttpPost]\r\n    public async Task<ActionResult<Order>> CreateOrder(CreateOrderDto dto)\r\n    {\r\n        try\r\n        {\r\n            var order = await _orderService.CreateOrderAsync(dto);\r\n            await _emailService.SendEmailAsync(\r\n                dto.CustomerEmail,\r\n                "Order Confirmation",\r\n                $"Your order {order.Id} has been created");\r\n\r\n            return CreatedAtAction(nameof(GetOrder), new { id = order.Id }, order);\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            _logger.LogError(ex, "Error creating order");\r\n            return StatusCode(500, "Internal server error");\r\n        }\r\n    }\r\n}\n'})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>s});var i=r(6540);const o={},t=i.createContext(o);function c(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);