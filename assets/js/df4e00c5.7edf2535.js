"use strict";(self.webpackChunkdotnet_overview=self.webpackChunkdotnet_overview||[]).push([[2776],{6470:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"Topics/CloudTechnologies/AzureSQLDatabase","title":"Azure SQL Database","description":"Short Introduction","source":"@site/docs/Topics/07_CloudTechnologies/32_AzureSQLDatabase.md","sourceDirName":"Topics/07_CloudTechnologies","slug":"/Topics/CloudTechnologies/azure_sql_database","permalink":"/docusaurus_dotnet_overview/docs/Topics/CloudTechnologies/azure_sql_database","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"dotnet","permalink":"/docusaurus_dotnet_overview/docs/tags/dotnet"},{"inline":true,"label":"azure","permalink":"/docusaurus_dotnet_overview/docs/tags/azure"},{"inline":true,"label":"sql","permalink":"/docusaurus_dotnet_overview/docs/tags/sql"},{"inline":true,"label":"database","permalink":"/docusaurus_dotnet_overview/docs/tags/database"}],"version":"current","sidebarPosition":32,"frontMatter":{"slug":"azure_sql_database","title":"Azure SQL Database","tags":["dotnet","azure","sql","database"]},"sidebar":"tutorialSidebar","previous":{"title":"Azure Functions","permalink":"/docusaurus_dotnet_overview/docs/Topics/CloudTechnologies/azure_functions"},"next":{"title":"Azure Cosmos DB","permalink":"/docusaurus_dotnet_overview/docs/Topics/CloudTechnologies/azure_cosmos_database"}}');var t=r(4848),s=r(8453);const a={slug:"azure_sql_database",title:"Azure SQL Database",tags:["dotnet","azure","sql","database"]},o="Azure SQL Database",l={},d=[{value:"Short Introduction",id:"short-introduction",level:2},{value:"Official Definition",id:"official-definition",level:2},{value:"Setup and Deployment Steps",id:"setup-and-deployment-steps",level:2},{value:"Azure CLI Setup",id:"azure-cli-setup",level:3},{value:"Terraform Configuration",id:"terraform-configuration",level:3},{value:"Typical Usage and Integration with .NET Apps",id:"typical-usage-and-integration-with-net-apps",level:2},{value:"Entity Framework Configuration",id:"entity-framework-configuration",level:3},{value:"Direct ADO.NET Usage",id:"direct-adonet-usage",level:3},{value:"Use Cases",id:"use-cases",level:2},{value:"When to Use vs Alternatives",id:"when-to-use-vs-alternatives",level:2},{value:"Use Azure SQL Database when",id:"use-azure-sql-database-when",level:3},{value:"Don&#39;t use when",id:"dont-use-when",level:3},{value:"Alternatives",id:"alternatives",level:3},{value:"Market Pros/Cons and Cost Considerations",id:"market-proscons-and-cost-considerations",level:2},{value:"Pros",id:"pros",level:3},{value:"Cons",id:"cons",level:3},{value:"Cost Considerations",id:"cost-considerations",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"azure-sql-database",children:"Azure SQL Database"})}),"\n",(0,t.jsx)(n.h2,{id:"short-introduction",children:"Short Introduction"}),"\n",(0,t.jsx)(n.p,{children:"Azure SQL Database is a fully managed Platform-as-a-Service (PaaS) database engine that provides SQL Server capabilities in the cloud with built-in intelligence, security, and high availability."}),"\n",(0,t.jsx)(n.h2,{id:"official-definition",children:"Official Definition"}),"\n",(0,t.jsx)(n.p,{children:'"Azure SQL Database is a fully managed relational database with auto-scale, integral intelligence, and robust security. It\'s the intelligent, scalable, cloud database service that provides the broadest SQL Server engine compatibility."'}),"\n",(0,t.jsx)(n.h2,{id:"setup-and-deployment-steps",children:"Setup and Deployment Steps"}),"\n",(0,t.jsx)(n.h3,{id:"azure-cli-setup",children:"Azure CLI Setup"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Create SQL Server\r\naz sql server create --name myserver --resource-group myResourceGroup --location eastus --admin-user myadmin --admin-password MyPassword123!\r\n\r\n# Configure firewall\r\naz sql server firewall-rule create --resource-group myResourceGroup --server myserver --name AllowAzureIps --start-ip-address 0.0.0.0 --end-ip-address 0.0.0.0\r\n\r\n# Create database\r\naz sql db create --resource-group myResourceGroup --server myserver --name mydatabase --service-objective S0\n"})}),"\n",(0,t.jsx)(n.h3,{id:"terraform-configuration",children:"Terraform Configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-hcl",children:'resource "azurerm_mssql_server" "example" {\r\n  name                         = "example-sqlserver"\r\n  resource_group_name          = azurerm_resource_group.example.name\r\n  location                     = azurerm_resource_group.example.location\r\n  version                      = "12.0"\r\n  administrator_login          = "4dm1n157r470r"\r\n  administrator_login_password = "4-v3ry-53cr37-p455w0rd"\r\n}\r\n\r\nresource "azurerm_mssql_database" "example" {\r\n  name           = "example-db"\r\n  server_id      = azurerm_mssql_server.example.id\r\n  collation      = "SQL_Latin1_General_CP1_CI_AS"\r\n  license_type   = "LicenseIncluded"\r\n  max_size_gb    = 2\r\n  sku_name       = "S0"\r\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"typical-usage-and-integration-with-net-apps",children:"Typical Usage and Integration with .NET Apps"}),"\n",(0,t.jsx)(n.h3,{id:"entity-framework-configuration",children:"Entity Framework Configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'// appsettings.json\r\n{\r\n  "ConnectionStrings": {\r\n    "DefaultConnection": "Server=tcp:myserver.database.windows.net,1433;Database=mydatabase;User ID=myadmin;Password=MyPassword123!;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;"\r\n  }\r\n}\r\n\r\n// Program.cs\r\nusing Microsoft.EntityFrameworkCore;\r\n\r\nvar builder = WebApplication.CreateBuilder(args);\r\n\r\nbuilder.Services.AddDbContext<ApplicationDbContext>(options =>\r\n    options.UseSqlServer(builder.Configuration.GetConnectionString("DefaultConnection")));\r\n\r\nvar app = builder.Build();\r\n\r\n// DbContext\r\npublic class ApplicationDbContext : DbContext\r\n{\r\n    public ApplicationDbContext(DbContextOptions<ApplicationDbContext> options) : base(options) { }\r\n\r\n    public DbSet<Product> Products { get; set; }\r\n    public DbSet<Customer> Customers { get; set; }\r\n\r\n    protected override void OnModelCreating(ModelBuilder modelBuilder)\r\n    {\r\n        modelBuilder.Entity<Product>(entity =>\r\n        {\r\n            entity.HasKey(e => e.Id);\r\n            entity.Property(e => e.Name).IsRequired().HasMaxLength(100);\r\n            entity.Property(e => e.Price).HasColumnType("decimal(18,2)");\r\n        });\r\n    }\r\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"direct-adonet-usage",children:"Direct ADO.NET Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'using Microsoft.Data.SqlClient;\r\n\r\npublic class ProductService\r\n{\r\n    private readonly string _connectionString;\r\n\r\n    public ProductService(IConfiguration configuration)\r\n    {\r\n        _connectionString = configuration.GetConnectionString("DefaultConnection");\r\n    }\r\n\r\n    public async Task<List<Product>> GetProductsAsync()\r\n    {\r\n        var products = new List<Product>();\r\n\r\n        using var connection = new SqlConnection(_connectionString);\r\n        await connection.OpenAsync();\r\n\r\n        using var command = new SqlCommand("SELECT Id, Name, Price FROM Products", connection);\r\n        using var reader = await command.ExecuteReaderAsync();\r\n\r\n        while (await reader.ReadAsync())\r\n        {\r\n            products.Add(new Product\r\n            {\r\n                Id = reader.GetInt32("Id"),\r\n                Name = reader.GetString("Name"),\r\n                Price = reader.GetDecimal("Price")\r\n            });\r\n        }\r\n\r\n        return products;\r\n    }\r\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Traditional relational database applications"}),"\n",(0,t.jsx)(n.li,{children:"OLTP (Online Transaction Processing) workloads"}),"\n",(0,t.jsx)(n.li,{children:"Data warehousing with columnstore indexes"}),"\n",(0,t.jsx)(n.li,{children:"Applications requiring ACID transactions"}),"\n",(0,t.jsx)(n.li,{children:"Migration from on-premises SQL Server"}),"\n",(0,t.jsx)(n.li,{children:"Multi-tenant SaaS applications"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"when-to-use-vs-alternatives",children:"When to Use vs Alternatives"}),"\n",(0,t.jsx)(n.h3,{id:"use-azure-sql-database-when",children:"Use Azure SQL Database when"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"You need full SQL Server compatibility"}),"\n",(0,t.jsx)(n.li,{children:"ACID transactions are critical"}),"\n",(0,t.jsx)(n.li,{children:"Complex relational queries are common"}),"\n",(0,t.jsx)(n.li,{children:"Existing SQL Server expertise exists"}),"\n",(0,t.jsx)(n.li,{children:"Integration with Microsoft ecosystem is important"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"dont-use-when",children:"Don't use when"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Document-based data models are more suitable"}),"\n",(0,t.jsx)(n.li,{children:"Extreme horizontal scaling is required"}),"\n",(0,t.jsx)(n.li,{children:"Cost optimization for simple data scenarios"}),"\n",(0,t.jsx)(n.li,{children:"NoSQL flexibility is needed"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"alternatives",children:"Alternatives"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Azure"}),": Cosmos DB (NoSQL), PostgreSQL, MySQL"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"AWS"}),": RDS (SQL Server, PostgreSQL, MySQL), Aurora"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"GCP"}),": Cloud SQL, Cloud Spanner"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"market-proscons-and-cost-considerations",children:"Market Pros/Cons and Cost Considerations"}),"\n",(0,t.jsx)(n.h3,{id:"pros",children:"Pros"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Fully managed with automatic backups and updates"}),"\n",(0,t.jsx)(n.li,{children:"Built-in intelligent performance optimization"}),"\n",(0,t.jsx)(n.li,{children:"Advanced security features (encryption, threat detection)"}),"\n",(0,t.jsx)(n.li,{children:"High availability with 99.99% SLA"}),"\n",(0,t.jsx)(n.li,{children:"Elastic scaling capabilities"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"cons",children:"Cons"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Can be expensive for large databases"}),"\n",(0,t.jsx)(n.li,{children:"Some SQL Server features not available"}),"\n",(0,t.jsx)(n.li,{children:"Vendor lock-in to Azure"}),"\n",(0,t.jsx)(n.li,{children:"Connection limits based on service tier"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"cost-considerations",children:"Cost Considerations"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"DTU model: S0 (10 DTU) ~$15/month, S1 (20 DTU) ~$30/month"}),"\n",(0,t.jsx)(n.li,{children:"vCore model: 2 vCore General Purpose ~$350/month"}),"\n",(0,t.jsx)(n.li,{children:"Serverless option available for intermittent workloads"}),"\n",(0,t.jsx)(n.li,{children:"Storage charged separately (~$0.115/GB/month)"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>o});var i=r(6540);const t={},s=i.createContext(t);function a(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);