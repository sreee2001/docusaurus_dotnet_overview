"use strict";(self.webpackChunkdotnet_overview=self.webpackChunkdotnet_overview||[]).push([[7142],{4256:e=>{e.exports=JSON.parse('{"tag":{"label":"architecture","permalink":"/docusaurus_dotnet_overview/docs/tags/architecture","allTagsPath":"/docusaurus_dotnet_overview/docs/tags","count":6,"items":[{"id":"Topics/WebTechnologies/Blazor","title":"Blazor","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/WebTechnologies/blazor_pages"},{"id":"Topics/WebTechnologies/ModelViewController_MVC","title":"Model-View-Controller","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/WebTechnologies/mvc"},{"id":"Topics/WebTechnologies/RazorPages","title":"Razor Pages","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/WebTechnologies/razor_pages"},{"id":"Topics/DataAccessAndPersistence/RepositoryPattern","title":"Repository Pattern","description":"The Repository Pattern encapsulates the logic needed to access data sources, centralizing common data access functionality and providing better maintainability and decoupling infrastructure or technology used to access databases from the domain model layer.","permalink":"/docusaurus_dotnet_overview/docs/Topics/DataAccessAndPersistence/repository_pattern"},{"id":"Topics/DataAccessAndPersistence/UnitOfWorkPattern","title":"Unit of Work","description":"The Unit of Work pattern maintains a list of objects affected by a business transaction and coordinates writing out changes and resolving concurrency problems. It ensures that multiple repository operations are treated as a single transaction.","permalink":"/docusaurus_dotnet_overview/docs/Topics/DataAccessAndPersistence/unit_of_work"},{"id":"Topics/WebTechnologies/WebAPI","title":"Web API\'s","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/WebTechnologies/web_api"}],"unlisted":false}}')}}]);