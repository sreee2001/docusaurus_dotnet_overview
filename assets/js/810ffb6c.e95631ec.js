"use strict";(self.webpackChunkdotnet_overview=self.webpackChunkdotnet_overview||[]).push([[4761],{9134:e=>{e.exports=JSON.parse('{"tag":{"label":"dotnet","permalink":"/docusaurus_dotnet_overview/docs/tags/dotnet","allTagsPath":"/docusaurus_dotnet_overview/docs/tags","count":45,"items":[{"id":"Topics/Fundamentals/DotNETRuntimeAndSDK","title":".NET Runtime and SDK","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/Fundamentals/runtime_vs_sdk"},{"id":"Topics/Fundamentals/ComparingOptionsForDotnet","title":".NET versions","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/Fundamentals/dotnet_versions"},{"id":"Topics/DataAccessAndPersistence/AdoDotNet","title":"ADO.NET","description":"ADO.NET is the foundational data access technology in .NET that provides low-level access to data sources. It offers maximum control and performance but requires more code and careful resource management.","permalink":"/docusaurus_dotnet_overview/docs/Topics/DataAccessAndPersistence/ado_net"},{"id":"Topics/DevOps_and_CI_CD/ApplicationInsights","title":"Application Insights (Observability + Instrumentation)","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/DevOps_and_CI_CD/application_insights"},{"id":"Topics/CoreDevelopment/ASP_DOTNET_Core","title":"ASP.NET Core","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/CoreDevelopment/asp_dotnet_core"},{"id":"Topics/CoreDevelopment/AuthenticationAndAuthorization","title":"Authentication & Authorization","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/CoreDevelopment/authentication_authorization"},{"id":"Topics/CloudTechnologies/AzureAppService","title":"Azure App Service","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/CloudTechnologies/azure_app_service"},{"id":"Topics/ContainerizationAndOrchestration/AzureContainerApps","title":"Azure Container Apps","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/ContainerizationAndOrchestration/azure_container_apps"},{"id":"Topics/ContainerizationAndOrchestration/AzureContainerRegistry","title":"Azure Container Registry","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/ContainerizationAndOrchestration/azure_container_registry"},{"id":"Topics/CloudTechnologies/AzureCosmosDB","title":"Azure Cosmos DB","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/CloudTechnologies/azure_cosmos_database"},{"id":"Topics/DevOps_and_CI_CD/AzureDevOps","title":"Azure DevOps","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/DevOps_and_CI_CD/azure_devops"},{"id":"Topics/CloudTechnologies/AzureFunctions","title":"Azure Functions","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/CloudTechnologies/azure_functions"},{"id":"Topics/CloudTechnologies/AzureKeyVault","title":"Azure Key Vault","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/CloudTechnologies/azure_key_vault"},{"id":"Topics/CloudTechnologies/AzureServiceBus","title":"Azure Service Bus","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/CloudTechnologies/azure_service_bus"},{"id":"Topics/CloudTechnologies/AzureSQLDatabase","title":"Azure SQL Database","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/CloudTechnologies/azure_sql_database"},{"id":"Topics/CloudTechnologies/AzureStorage","title":"Azure Storage (Blob, Queue, Table)","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/CloudTechnologies/azure_storage"},{"id":"Topics/PerformanceAndScalability/BackgroundServices","title":"Background Services","description":"Short Introduction and Official Definition","permalink":"/docusaurus_dotnet_overview/docs/Topics/PerformanceAndScalability/background_services"},{"id":"Topics/Fundamentals/BaseClassLibrary_BCL","title":"Base Class Library (BCL)","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/Fundamentals/base_class_library"},{"id":"Topics/WebTechnologies/Blazor","title":"Blazor","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/WebTechnologies/blazor_pages"},{"id":"Topics/PerformanceAndScalability/Caching","title":"Caching","description":"Short Introduction and Official Definition","permalink":"/docusaurus_dotnet_overview/docs/Topics/PerformanceAndScalability/caching"},{"id":"Topics/Fundamentals/CommonLanguageInfrastructure_CLI","title":"Common Language Infrastructure (CLI)","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/Fundamentals/clr"},{"id":"Topics/CoreDevelopment/ConfigurationManagement","title":"Configuration Management","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/CoreDevelopment/configuration_management"},{"id":"Topics/DataAccessAndPersistence/Dapper","title":"Dapper","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/DataAccessAndPersistence/dapper"},{"id":"Topics/CoreDevelopment/DependencyInjection","title":"Dependency Injection (DI)","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/CoreDevelopment/dependency_injection"},{"id":"Topics/ContainerizationAndOrchestration/Docker","title":"Docker","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/ContainerizationAndOrchestration/docker"},{"id":"Topics/Testing/24.2_EndToEndTesting","title":"End to End Testing","description":"End-to-end testing validates complete user workflows by testing the application from the user interface through all layers to the database. It simulates real user interactions to ensure the entire system works together correctly.","permalink":"/docusaurus_dotnet_overview/docs/Topics/Testing/end_to_end_testing"},{"id":"Topics/CoreDevelopment/EntityFrameworkCore","title":"Entity Framework Core","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/CoreDevelopment/entity_framework_core"},{"id":"Topics/DataAccessAndPersistence/EntityFrameworkCoreAdvanced","title":"Entity Framework Core Advanced","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/DataAccessAndPersistence/entity_framework_core_advanced"},{"id":"Topics/Fundamentals/GarbageCollection_GC","title":"Garbage Collection","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/Fundamentals/garbage_collection"},{"id":"Topics/DevOps_and_CI_CD/GitHubActions","title":"GitHub Actions","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/DevOps_and_CI_CD/github_actions"},{"id":"Topics/Testing/24.1_IntegrationTesting","title":"Integration Testing","description":"Integration testing verifies that different components or systems work correctly together. In .NET, this typically involves testing controllers, databases, external services, and the complete request-response pipeline.","permalink":"/docusaurus_dotnet_overview/docs/Topics/Testing/integration_testing"},{"id":"Topics/ContainerizationAndOrchestration/Kubernetes","title":"Kubernetes","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/ContainerizationAndOrchestration/kubernetes"},{"id":"Topics/Testing/24.3_LoadTesting","title":"Load Testing","description":"Load testing evaluates how an application performs under expected and peak load conditions. It helps identify performance bottlenecks, resource limitations, and scalability issues before they impact users in production.","permalink":"/docusaurus_dotnet_overview/docs/Topics/Testing/load_testing"},{"id":"Topics/CoreDevelopment/Logging","title":"Logging","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/CoreDevelopment/logging"},{"id":"Topics/PerformanceAndScalability/MemoryManagement","title":"Memory Management","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/PerformanceAndScalability/memory_management"},{"id":"Topics/CoreDevelopment/Middleware","title":"Middleware","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/CoreDevelopment/middleware"},{"id":"Topics/WebTechnologies/ModelViewController_MVC","title":"Model-View-Controller","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/WebTechnologies/mvc"},{"id":"Topics/PerformanceAndScalability/PerformanceOptimization","title":"Performance Optimization","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/PerformanceAndScalability/performance_optimization"},{"id":"Topics/WebTechnologies/RazorPages","title":"Razor Pages","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/WebTechnologies/razor_pages"},{"id":"Topics/DataAccessAndPersistence/RepositoryPattern","title":"Repository Pattern","description":"The Repository Pattern encapsulates the logic needed to access data sources, centralizing common data access functionality and providing better maintainability and decoupling infrastructure or technology used to access databases from the domain model layer.","permalink":"/docusaurus_dotnet_overview/docs/Topics/DataAccessAndPersistence/repository_pattern"},{"id":"Topics/WebTechnologies/SignarR","title":"SignalR","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/WebTechnologies/signalr"},{"id":"Topics/Testing/TestDrivenDevelopment_TDD","title":"Test Driven Development","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/Testing/tdd"},{"id":"Topics/DataAccessAndPersistence/UnitOfWorkPattern","title":"Unit of Work","description":"The Unit of Work pattern maintains a list of objects affected by a business transaction and coordinates writing out changes and resolving concurrency problems. It ensures that multiple repository operations are treated as a single transaction.","permalink":"/docusaurus_dotnet_overview/docs/Topics/DataAccessAndPersistence/unit_of_work"},{"id":"Topics/Testing/UnitTesting","title":"Unit Testing","description":"Unit testing involves testing individual components or methods in isolation to verify they work as expected. It\'s the foundation of a robust testing strategy and enables rapid feedback during development.","permalink":"/docusaurus_dotnet_overview/docs/Topics/Testing/unit_testing"},{"id":"Topics/WebTechnologies/WebAPI","title":"Web API\'s","description":"Short Introduction","permalink":"/docusaurus_dotnet_overview/docs/Topics/WebTechnologies/web_api"}],"unlisted":false}}')}}]);