"use strict";(self.webpackChunkdotnet_overview=self.webpackChunkdotnet_overview||[]).push([[7465],{6061:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"Topics/Fundamentals/BaseClassLibrary_BCL","title":"Base Class Library (BCL)","description":"Short Introduction","source":"@site/docs/Topics/01_Fundamentals/04_BaseClassLibrary_BCL.md","sourceDirName":"Topics/01_Fundamentals","slug":"/Topics/Fundamentals/base_class_library","permalink":"/docusaurus_dotnet_overview/docs/Topics/Fundamentals/base_class_library","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"dotnet","permalink":"/docusaurus_dotnet_overview/docs/tags/dotnet"},{"inline":true,"label":"bcl","permalink":"/docusaurus_dotnet_overview/docs/tags/bcl"}],"version":"current","sidebarPosition":4,"frontMatter":{"slug":"base_class_library","title":"Base Class Library (BCL)","tags":["dotnet","bcl"]},"sidebar":"tutorialSidebar","previous":{"title":"Common Language Infrastructure (CLI)","permalink":"/docusaurus_dotnet_overview/docs/Topics/Fundamentals/clr"},"next":{"title":"Garbage Collection","permalink":"/docusaurus_dotnet_overview/docs/Topics/Fundamentals/garbage_collection"}}');var s=i(4848),a=i(8453);const r={slug:"base_class_library",title:"Base Class Library (BCL)",tags:["dotnet","bcl"]},l="Base Class Library (BCL)",o={},c=[{value:"Short Introduction",id:"short-introduction",level:2},{value:"Official Definition",id:"official-definition",level:2},{value:"Usage",id:"usage",level:2},{value:"Use Cases",id:"use-cases",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"base-class-library-bcl",children:"Base Class Library (BCL)"})}),"\n",(0,s.jsx)(n.h2,{id:"short-introduction",children:"Short Introduction"}),"\n",(0,s.jsx)(n.p,{children:"The Base Class Library provides fundamental functionality for .NET applications, including basic data types, file I/O, collections, and more."}),"\n",(0,s.jsx)(n.h2,{id:"official-definition",children:"Official Definition"}),"\n",(0,s.jsx)(n.p,{children:"The Base Class Library (BCL) is a standard library that provides basic functionality for .NET applications, including primitive data types, collections, file I/O, string manipulation, and other essential functionality."}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'// Common BCL usage examples\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.IO;\r\nusing System.Threading.Tasks;\r\n\r\n// Collections\r\nvar list = new List<string> { "item1", "item2" };\r\nvar dictionary = new Dictionary<string, int> { ["key1"] = 1 };\r\n\r\n// File I/O\r\nawait File.WriteAllTextAsync("file.txt", "Hello World");\r\nstring content = await File.ReadAllTextAsync("file.txt");\r\n\r\n// DateTime\r\nDateTime now = DateTime.UtcNow;\r\nDateOnly today = DateOnly.FromDateTime(now);\r\n\r\n// String manipulation\r\nstring text = "Hello World";\r\nstring upper = text.ToUpper();\r\nstring[] parts = text.Split(\' \');\n'})}),"\n",(0,s.jsx)(n.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Basic application functionality"}),"\n",(0,s.jsx)(n.li,{children:"Data manipulation"}),"\n",(0,s.jsx)(n.li,{children:"File operations"}),"\n",(0,s.jsx)(n.li,{children:"Network operations"}),"\n",(0,s.jsx)(n.li,{children:"Threading and async operations"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var t=i(6540);const s={},a=t.createContext(s);function r(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);