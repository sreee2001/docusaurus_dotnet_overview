"use strict";(self.webpackChunkdotnet_overview=self.webpackChunkdotnet_overview||[]).push([[907],{8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>l});var o=r(6540);const i={},t=o.createContext(i);function s(e){const n=o.useContext(t);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(t.Provider,{value:n},e.children)}},9378:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"Topics/ContainerizationAndOrchestration/Docker","title":"Docker","description":"Short Introduction","source":"@site/docs/Topics/08_ContainerizationAndOrchestration/36_Docker.md","sourceDirName":"Topics/08_ContainerizationAndOrchestration","slug":"/Topics/ContainerizationAndOrchestration/docker","permalink":"/docusaurus_dotnet_overview/docs/Topics/ContainerizationAndOrchestration/docker","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"dotnet","permalink":"/docusaurus_dotnet_overview/docs/tags/dotnet"},{"inline":true,"label":"containers","permalink":"/docusaurus_dotnet_overview/docs/tags/containers"},{"inline":true,"label":"docker","permalink":"/docusaurus_dotnet_overview/docs/tags/docker"}],"version":"current","sidebarPosition":36,"frontMatter":{"slug":"docker","title":"Docker","tags":["dotnet","containers","docker"]},"sidebar":"tutorialSidebar","previous":{"title":"Azure Storage (Blob, Queue, Table)","permalink":"/docusaurus_dotnet_overview/docs/Topics/CloudTechnologies/azure_storage"},"next":{"title":"Kubernetes","permalink":"/docusaurus_dotnet_overview/docs/Topics/ContainerizationAndOrchestration/kubernetes"}}');var i=r(4848),t=r(8453);const s={slug:"docker",title:"Docker",tags:["dotnet","containers","docker"]},l="Docker",a={},c=[{value:"Short Introduction",id:"short-introduction",level:2},{value:"Official Definition",id:"official-definition",level:2},{value:"Setup/Usage with .NET 8+ Code",id:"setupusage-with-net-8-code",level:2},{value:"Basic Dockerfile for .NET 8",id:"basic-dockerfile-for-net-8",level:3},{value:"Docker Compose for multi-service setup:",id:"docker-compose-for-multi-service-setup",level:3},{value:"Use Cases",id:"use-cases",level:2},{value:"When to Use vs When Not to Use",id:"when-to-use-vs-when-not-to-use",level:2},{value:"Use Docker when",id:"use-docker-when",level:3},{value:"Consider alternatives when",id:"consider-alternatives-when",level:3},{value:"Market Alternatives &amp; Pros/Cons",id:"market-alternatives--proscons",level:2},{value:"Alternatives:",id:"alternatives",level:3},{value:"Pros:",id:"pros",level:3},{value:"Cons:",id:"cons",level:3},{value:"Complete Runnable Sample",id:"complete-runnable-sample",level:2},{value:"Multi-stage Production Dockerfile:",id:"multi-stage-production-dockerfile",level:3},{value:"Docker Commands",id:"docker-commands",level:3},{value:".dockerignore",id:"dockerignore",level:3},{value:"Production-ready docker-compose.override.yml",id:"production-ready-docker-composeoverrideyml",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"docker",children:"Docker"})}),"\n",(0,i.jsx)(n.h2,{id:"short-introduction",children:"Short Introduction"}),"\n",(0,i.jsx)(n.p,{children:'Docker is a containerization platform that packages applications and their dependencies into lightweight, portable containers. For .NET applications, Docker enables consistent deployment across different environments, from development to production, ensuring "it works on my machine" becomes "it works everywhere."'}),"\n",(0,i.jsx)(n.h2,{id:"official-definition",children:"Official Definition"}),"\n",(0,i.jsx)(n.p,{children:"Docker is an open platform for developing, shipping, and running applications using container virtualization. Docker containers wrap up software in a complete filesystem that contains everything needed to run: code, runtime, system tools, system libraries, and settings."}),"\n",(0,i.jsx)(n.h2,{id:"setupusage-with-net-8-code",children:"Setup/Usage with .NET 8+ Code"}),"\n",(0,i.jsx)(n.h3,{id:"basic-dockerfile-for-net-8",children:"Basic Dockerfile for .NET 8"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dockerfile",children:'# Use the official .NET 8 runtime as base image\r\nFROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base\r\nWORKDIR /app\r\nEXPOSE 8080\r\nEXPOSE 8081\r\n\r\n# Use SDK image for building\r\nFROM mcr.microsoft.com/dotnet/sdk:8.0 AS build\r\nARG BUILD_CONFIGURATION=Release\r\nWORKDIR /src\r\nCOPY ["HotelManagement.WebAPI/HotelManagement.WebAPI.csproj", "HotelManagement.WebAPI/"]\r\nCOPY ["HotelManagement.Core/HotelManagement.Core.csproj", "HotelManagement.Core/"]\r\nRUN dotnet restore "./HotelManagement.WebAPI/HotelManagement.WebAPI.csproj"\r\nCOPY . .\r\nWORKDIR "/src/HotelManagement.WebAPI"\r\nRUN dotnet build "./HotelManagement.WebAPI.csproj" -c $BUILD_CONFIGURATION -o /app/build\r\n\r\nFROM build AS publish\r\nARG BUILD_CONFIGURATION=Release\r\nRUN dotnet publish "./HotelManagement.WebAPI.csproj" -c $BUILD_CONFIGURATION -o /app/publish /p:UseAppHost=false\r\n\r\nFROM base AS final\r\nWORKDIR /app\r\nCOPY --from=publish /app/publish .\r\nENTRYPOINT ["dotnet", "HotelManagement.WebAPI.dll"]\n'})}),"\n",(0,i.jsx)(n.h3,{id:"docker-compose-for-multi-service-setup",children:"Docker Compose for multi-service setup:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'# docker-compose.yml\r\nservices:\r\n  hotel-api:\r\n    build:\r\n      context: .\r\n      dockerfile: HotelManagement.WebAPI/Dockerfile\r\n    ports:\r\n      - "5000:8080"\r\n      - "5001:8081"\r\n    environment:\r\n      - ASPNETCORE_ENVIRONMENT=Development\r\n      - ConnectionStrings__DefaultConnection=Server=hotel-db;Database=HotelManagement;User Id=sa;Password=YourPassword123!;TrustServerCertificate=true\r\n    depends_on:\r\n      - hotel-db\r\n    networks:\r\n      - hotel-network\r\n\r\n  hotel-db:\r\n    image: mcr.microsoft.com/mssql/server:2022-latest\r\n    environment:\r\n      - ACCEPT_EULA=Y\r\n      - SA_PASSWORD=YourPassword123!\r\n      - MSSQL_PID=Express\r\n    ports:\r\n      - "1433:1433"\r\n    volumes:\r\n      - hotel-db-data:/var/opt/mssql\r\n    networks:\r\n      - hotel-network\r\n\r\n  redis:\r\n    image: redis:7-alpine\r\n    ports:\r\n      - "6379:6379"\r\n    volumes:\r\n      - redis-data:/data\r\n    networks:\r\n      - hotel-network\r\n\r\nvolumes:\r\n  hotel-db-data:\r\n  redis-data:\r\n\r\nnetworks:\r\n  hotel-network:\r\n    driver: bridge\n'})}),"\n",(0,i.jsx)(n.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Consistent Environments"}),': Eliminate "works on my machine" issues']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Microservices Deployment"}),": Package individual services independently"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CI/CD Pipelines"}),": Standardized build and deployment process"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Development Environment"}),": Quick setup for new team members"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cloud Migration"}),": Easier transition between cloud providers"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Scaling"}),": Horizontal scaling with container orchestration"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"when-to-use-vs-when-not-to-use",children:"When to Use vs When Not to Use"}),"\n",(0,i.jsx)(n.h3,{id:"use-docker-when",children:"Use Docker when"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Building microservices or distributed applications"}),"\n",(0,i.jsx)(n.li,{children:"Need consistent deployment across environments"}),"\n",(0,i.jsx)(n.li,{children:"Working with complex dependency requirements"}),"\n",(0,i.jsx)(n.li,{children:"Implementing CI/CD pipelines"}),"\n",(0,i.jsx)(n.li,{children:"Scaling applications horizontally"}),"\n",(0,i.jsx)(n.li,{children:"Working in team environments"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"consider-alternatives-when",children:"Consider alternatives when"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Simple single-server applications"}),"\n",(0,i.jsx)(n.li,{children:"Windows-specific applications requiring full OS features"}),"\n",(0,i.jsx)(n.li,{children:"Applications with extreme performance requirements"}),"\n",(0,i.jsx)(n.li,{children:"Limited storage or bandwidth constraints"}),"\n",(0,i.jsx)(n.li,{children:"Team lacks containerization knowledge"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"market-alternatives--proscons",children:"Market Alternatives & Pros/Cons"}),"\n",(0,i.jsx)(n.h3,{id:"alternatives",children:"Alternatives:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Podman"}),": Daemonless container engine"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"containerd"}),": Industry-standard container runtime"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"LXC/LXD"}),": System containers for Linux"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Windows Containers"}),": Native Windows containerization"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Virtual Machines"}),": Traditional virtualization"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"pros",children:"Pros:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Lightweight compared to VMs"}),"\n",(0,i.jsx)(n.li,{children:"Fast startup times"}),"\n",(0,i.jsx)(n.li,{children:"Consistent environments"}),"\n",(0,i.jsx)(n.li,{children:"Easy scaling and orchestration"}),"\n",(0,i.jsx)(n.li,{children:"Large ecosystem and community support"}),"\n",(0,i.jsx)(n.li,{children:"Efficient resource utilization"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"cons",children:"Cons:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Learning curve for teams"}),"\n",(0,i.jsx)(n.li,{children:"Additional complexity in simple scenarios"}),"\n",(0,i.jsx)(n.li,{children:"Storage overhead for images"}),"\n",(0,i.jsx)(n.li,{children:"Security considerations with shared kernel"}),"\n",(0,i.jsx)(n.li,{children:"Windows containers have limitations"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"complete-runnable-sample",children:"Complete Runnable Sample"}),"\n",(0,i.jsx)(n.h3,{id:"multi-stage-production-dockerfile",children:"Multi-stage Production Dockerfile:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dockerfile",children:'# HotelManagement.WebAPI/Dockerfile\r\nFROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base\r\nUSER app\r\nWORKDIR /app\r\nEXPOSE 8080\r\nEXPOSE 8081\r\n\r\nFROM mcr.microsoft.com/dotnet/sdk:8.0 AS build\r\nARG BUILD_CONFIGURATION=Release\r\nWORKDIR /src\r\n\r\n# Copy project files and restore dependencies\r\nCOPY ["HotelManagement.WebAPI/HotelManagement.WebAPI.csproj", "HotelManagement.WebAPI/"]\r\nCOPY ["HotelManagement.Core/HotelManagement.Core.csproj", "HotelManagement.Core/"]\r\nCOPY ["HotelManagement.Infrastructure/HotelManagement.Infrastructure.csproj", "HotelManagement.Infrastructure/"]\r\n\r\nRUN dotnet restore "HotelManagement.WebAPI/HotelManagement.WebAPI.csproj"\r\n\r\n# Copy source code and build\r\nCOPY . .\r\nWORKDIR "/src/HotelManagement.WebAPI"\r\nRUN dotnet build "HotelManagement.WebAPI.csproj" -c $BUILD_CONFIGURATION -o /app/build\r\n\r\nFROM build AS publish\r\nARG BUILD_CONFIGURATION=Release\r\nRUN dotnet publish "HotelManagement.WebAPI.csproj" -c $BUILD_CONFIGURATION -o /app/publish /p:UseAppHost=false\r\n\r\nFROM base AS final\r\nWORKDIR /app\r\nCOPY --from=publish /app/publish .\r\n\r\n# Health check\r\nHEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \\\r\n  CMD curl -f http://localhost:8080/health || exit 1\r\n\r\nENTRYPOINT ["dotnet", "HotelManagement.WebAPI.dll"]\n'})}),"\n",(0,i.jsx)(n.h3,{id:"docker-commands",children:"Docker Commands"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Build the image\r\ndocker build -t hotel-management-api:latest -f HotelManagement.WebAPI/Dockerfile .\r\n\r\n# Run container\r\ndocker run -d \\\r\n  --name hotel-api \\\r\n  -p 5000:8080 \\\r\n  -p 5001:8081 \\\r\n  -e ASPNETCORE_ENVIRONMENT=Production \\\r\n  -e ConnectionStrings__DefaultConnection="Server=host.docker.internal;Database=HotelManagement;Integrated Security=true;TrustServerCertificate=true" \\\r\n  hotel-management-api:latest\r\n\r\n# View logs\r\ndocker logs hotel-api\r\n\r\n# Execute commands in container\r\ndocker exec -it hotel-api bash\r\n\r\n# Build and run with compose\r\ndocker-compose up -d\r\n\r\n# Scale services\r\ndocker-compose up -d --scale hotel-api=3\n'})}),"\n",(0,i.jsx)(n.h3,{id:"dockerignore",children:".dockerignore"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"# Ignore unnecessary files\r\n**/.dockerignore\r\n**/.env\r\n**/.git\r\n**/.gitignore\r\n**/.project\r\n**/.settings\r\n**/.toolstarget\r\n**/.vs\r\n**/.vscode\r\n**/*.*proj.user\r\n**/*.dbmdl\r\n**/*.jfm\r\n**/azds.yaml\r\n**/bin\r\n**/charts\r\n**/docker-compose*\r\n**/Dockerfile*\r\n**/node_modules\r\n**/npm-debug.log\r\n**/obj\r\n**/secrets.dev.yaml\r\n**/values.dev.yaml\r\nLICENSE\r\nREADME.md\n"})}),"\n",(0,i.jsx)(n.h3,{id:"production-ready-docker-composeoverrideyml",children:"Production-ready docker-compose.override.yml"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'# docker-compose.override.yml (for production)\r\nservices:\r\n  hotel-api:\r\n    environment:\r\n      - ASPNETCORE_ENVIRONMENT=Production\r\n      - ASPNETCORE_URLS=https://+:8081;http://+:8080\r\n    restart: unless-stopped\r\n    deploy:\r\n      replicas: 2\r\n      resources:\r\n        limits:\r\n          cpus: "0.5"\r\n          memory: 512M\r\n        reservations:\r\n          cpus: "0.25"\r\n          memory: 256M\r\n\r\n  hotel-db:\r\n    restart: unless-stopped\r\n    deploy:\r\n      resources:\r\n        limits:\r\n          cpus: "1.0"\r\n          memory: 2G\r\n        reservations:\r\n          cpus: "0.5"\r\n          memory: 1G\r\n\r\n  redis:\r\n    restart: unless-stopped\r\n    command: redis-server --appendonly yes --requirepass yourredispassword\r\n    deploy:\r\n      resources:\r\n        limits:\r\n          cpus: "0.25"\r\n          memory: 256M\n'})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);